name: MyBuild
on:
  push:
    branches: 
     - master
     - 'feature/**'
     - 'dev/**'
  workflow_dispatch:
    logLevel:
      description: 'Log level'
      required: true
      default: 'information'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: Install dependencies
      run: dotnet restore ./TestCICD/DotNetAPI/TestCICD.csproj
    - name: Build
      run: dotnet build ./TestCICD/DotNetAPI/TestCICD.csproj --configuration Release --no-restore
  PublishArtifacts:
    needs: Build
    runs-on: ubuntu-latest    
    steps:
    - uses: actions/checkout@v2
    - name: Set package Version for master branch
      if: github.ref == 'refs/heads/master'
      run: echo "PACKAGE_VERSION=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER-prod" >> $GITHUB_ENV
    - name: Set package Version for feature branch
      if: contains(github.ref, 'feature')
      run: echo "PACKAGE_VERSION=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER-dev" >> $GITHUB_ENV
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: Install dependencies
      run: dotnet restore ./TestCICD/DotNetAPI/TestCICD.csproj
    - name: Create artifacts folder
      run: |
        mkdir "$GITHUB_WORKSPACE/artifacts"
        mkdir "$GITHUB_WORKSPACE/artifacts/TestCICD"
    - name: Publish TestCICD
      run: dotnet publish TestCICD/DotNetAPI/TestCICD.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/TestCICD"
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1
      with:
        version: latest
    - name: Package TestCICD
      run: |
        octo pack --id="TestCICD" --format="Zip" --version="$PACKAGE_VERSION" --basePath="$GITHUB_WORKSPACE/artifacts/TestCICD" --outFolder="$GITHUB_WORKSPACE/artifacts"
    - name: Push packages to Octopus
      uses: OctopusDeploy/push-package-action@v1
      with:
        api_key: ${{ secrets.OCTOPUSSERVERAPIKEY }}
        server: ${{ secrets.OCTOPUSSERVERURL }}
        packages: "artifacts/TestCICD.${{ env.PACKAGE_VERSION }}.zip"
        space: ${{ secrets.OCTOPUSSERVER_SPACE }}
